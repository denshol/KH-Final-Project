<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="noticeMapper">
  
   <select id="selectListCount" resultType="_int">
  	
  	SELECT COUNT(*)
	FROM BOARD B
	JOIN MEMBER M ON(B.BOARD_WRITER = M.USER_NO)
	WHERE B.STATUS = 'Y'
	AND CATEGORY_CODE = 'B1'
	<choose>
		<when test="status == null or status == '부서선택'">
			AND (B.BOARD_TITLE LIKE '%'||#{keyword}||'%' OR BOARD_CONTENT LIKE '%'||#{keyword}||'%')
		</when>
		<when test="status != null and keyword == null">
			AND DEPT_CODE = #{status}
		</when>
		<when test="status != null">
			AND (B.BOARD_TITLE LIKE '%'||#{keyword}||'%' OR BOARD_CONTENT LIKE '%'||#{keyword}||'%')
			AND DEPT_CODE = #{status}
		</when>
	</choose>
	
  </select>
  
  <select id="selectList" resultMap="boardResultSet" parameterType="hashmap">
	SELECT R.REF_UNO, B.BOARD_NO, M.USER_NAME, D.DEPT_NAME, B.BOARD_TITLE, B.BOARD_CONTENT, TO_CHAR(B.CREATE_DATE,'YYYY-MM-DD') "CREATE_DATE", B.COUNT, B.IMPORTANCE_LEVEL, A.ATTACHMENT_NO
	FROM 
	    (SELECT *
	    FROM (SELECT * FROM BOARD WHERE CATEGORY_CODE = 'B1' AND IMPORTANCE_LEVEL = 'I' AND STATUS = 'Y' ORDER BY CREATE_DATE DESC)
	    
	    UNION ALL
	    
	    SELECT *
	    FROM (SELECT * FROM BOARD WHERE CATEGORY_CODE = 'B1' AND IMPORTANCE_LEVEL = 'R' AND STATUS = 'Y' ORDER BY CREATE_DATE DESC))B
	JOIN MEMBER M ON( B.BOARD_WRITER = M.USER_NO)
	LEFT JOIN DEPARTMENT D USING(DEPT_CODE)
	LEFT JOIN BOARD_ATTACHMENT A ON(B.BOARD_NO = A.REF_BNO)
	LEFT JOIN RECOMMEND R ON(B.BOARD_NO = R.REF_BNO)
	WHERE B.STATUS = 'Y'
	<choose>
		<when test="status == null or status == '부서선택'">
			AND (B.BOARD_TITLE LIKE '%'||#{keyword}||'%' OR BOARD_CONTENT LIKE '%'||#{keyword}||'%')
		</when>
		<when test="status != null and keyword == null">
			AND DEPT_CODE = #{status}
		</when>
		<when test="status != null">
			AND (B.BOARD_TITLE LIKE '%'||#{keyword}||'%' OR BOARD_CONTENT LIKE '%'||#{keyword}||'%')
			AND DEPT_CODE = #{status}
		</when>
	</choose>
  </select>
  
  <resultMap type="board" id="boardResultSet">
  	<result column="BOARD_NO" property="boardNo"/>
  	<result column="CATEGORY_CODE" property="categoryCode"/>
  	<result column="BOARD_WRITER" property="boardWriter"/>
  	<result column="BOARD_TITLE" property="boardTitle"/>
  	<result column="BOARD_CONTENT" property="boardContent"/>
  	<result column="CREATE_DATE" property="createDate"/>
  	<result column="MODIFY_DATE" property="modifyDate"/>
  	<result column="COUNT" property="count"/>
  	<result column="IMPORTANCE_LEVEL" property="importanceLevel"/>
  	<result column="DEPT_NAME" property="deptName"/>
  	<result column="ATTACHMENT_NO" property="attachmentNo"/>
  	<result column="REF_UNO" property="refUno"/>
  </resultMap>
  
  <resultMap type="attachment" id="boardAttachmentResultSet">
	<result column="ATTACHMENT_NO" property="attachmentNo"/>
	<result column="REF_BNO" property="refBno"/>
  	<result column="ORIGIN_NAME" property="originName"/>
  	<result column="CHANGE_NAME" property="changeName"/>
  	<result column="FILE_PATH" property="filePath"/>
  </resultMap>
  
  <update id="increaseCount">
  	UPDATE BOARD
  	SET COUNT = COUNT + 1
  	WHERE BOARD_NO = #{boardNo}
  	AND STATUS = 'Y'
  </update>
  
  <select id="selectNotice" resultMap = "boardResultSet">
	SELECT B.BOARD_NO, M.USER_NAME, B.BOARD_WRITER, B.CATEGORY_CODE, B.BOARD_TITLE, B.BOARD_CONTENT, TO_CHAR(B.CREATE_DATE,'YYYY-MM-DD') "CREATE_DATE", IMPORTANCE_LEVEL, DEPT_NAME
	FROM BOARD B 
	JOIN MEMBER M ON(USER_NO = BOARD_WRITER)
	JOIN DEPARTMENT USING(DEPT_CODE)
	WHERE BOARD_NO = #{boardNo}
	AND B.STATUS = 'Y'
  </select>
  
  <select id="selectAttachment" resultMap = "boardAttachmentResultSet">
   SELECT ATTACHMENT_NO, REF_BNO, ORIGIN_NAME, CHANGE_NAME, FILE_PATH
   FROM BOARD_ATTACHMENT
   WHERE REF_BNO = #{boardNo}
   AND STATUS = 'Y'
  </select>
  
  <insert id="insertNotice">
  	INSERT INTO BOARD (BOARD_NO, CATEGORY_CODE, BOARD_TITLE, BOARD_WRITER, BOARD_CONTENT, IMPORTANCE_LEVEL)
  	VALUES (SEQ_BNO.NEXTVAL, #{categoryCode}, #{boardTitle}, #{boardWriter}, #{boardContent}, #{importanceLevel})
  </insert>  
  
  <insert id="insertAttachment">
  	INSERT INTO BOARD_ATTACHMENT(ATTACHMENT_NO, REF_BNO, CATEGORY_CODE, ORIGIN_NAME, CHANGE_NAME, FILE_PATH)
  	VALUES(SEQ_BANO.NEXTVAL, SEQ_BNO.CURRVAL, #{categoryCode}, #{originName}, #{changeName}, #{filePath})
  </insert>
  
  <insert id="insertNewAttachment">
  	INSERT INTO BOARD_ATTACHMENT(ATTACHMENT_NO, REF_BNO, CATEGORY_CODE, ORIGIN_NAME, CHANGE_NAME, FILE_PATH)
  	VALUES(SEQ_BANO.NEXTVAL, #{refBno}, 'B1', #{originName}, #{changeName}, #{filePath})
  </insert>
  
  <select id="selectReplyList" resultMap="replyResultSet">
  	SELECT REPLY_NO, REPLY_WRITER, REPLY_CONTENT, TO_CHAR(CREATE_DATE,'YYYY-MM-DD') "CREATE_DATE", DEPT_NAME, USER_NAME
  	FROM REPLY R
  	JOIN MEMBER M ON(USER_NO = REPLY_WRITER)
  	JOIN DEPARTMENT D USING(DEPT_CODE)
  	WHERE REF_BNO = #{boardNo}
  	AND R.STATUS = 'Y'
  	ORDER BY R.CREATE_DATE DESC
  </select>
  
  <resultMap type="reply" id="replyResultSet">
  	<result column="REPLY_NO" property="replyNo"/>
  	<result column="REPLY_WRITER" property="replyWriter"/>
  	<result column="REPLY_CONTENT" property="replyContent"/>
  	<result column="CREATE_DATE" property="createDate"/>
  	<result column="DEPT_NAME" property="deptName"/>
  	<result column="USER_NAME" property="userName"/>
  </resultMap>
  
  <insert id="insertReply">
  	INSERT INTO REPLY (REPLY_NO, REF_BNO, REPLY_WRITER, REPLY_CONTENT)
  	VALUES (SEQ_RNO.NEXTVAL, #{refBno}, #{replyWriter}, #{replyContent})
  </insert>	
  
  <update id="updateReply">
  	UPDATE REPLY 
  	SET REPLY_CONTENT = #{replyContent},
  		MODIFY_DATE = SYSDATE
  	WHERE REPLY_NO = #{replyNo}
  </update>
  
  <update id="deleteReply">
  	UPDATE REPLY
  	SET STATUS = 'N'
  	WHERE REPLY_NO = #{replyNo}
  </update>
  
  <update id="deleteBoard">
  	UPDATE BOARD
  	SET STATUS = 'N'
  	WHERE BOARD_NO = #{boardNo}
  	AND STATUS = 'Y'
  </update>
  
  <update id="deleteBoardAttachment">
  	UPDATE BOARD_ATTACHMENT
  	SET STATUS = 'N'
  	WHERE REF_BNO = #{boardNo}
  	AND STATUS = 'Y'
  </update>
  
  <select id="selectBookmark" resultType="_int">
  	SELECT COUNT(*)
	FROM RECOMMEND
	WHERE REF_BNO = #{boardNo}
	AND REF_UNO = #{userNo}
	AND TYPE = 'B'
  </select>
  
  <delete id="deleteBookmark">
  	DELETE RECOMMEND
  	WHERE REF_BNO = #{boardNo}
	AND REF_UNO = #{userNo}
	AND TYPE = 'B'
  </delete>
  
  <insert id="insertBookmark">
  	INSERT INTO RECOMMEND VALUES
  	(#{boardNo}, #{userNo}, 'B')
  </insert>
  
  <select id="selectBookmarkCount" resultType="_int">
  	SELECT COUNT(*)
	FROM RECOMMEND
	AND REF_UNO = #{userNo}
	AND TYPE = 'B'
  </select>
  
  <select id="selectBookmarkList" resultMap = "boardResultSet">
 	SELECT B.BOARD_NO, M.USER_NAME, B.CATEGORY_CODE, B.BOARD_TITLE, B.BOARD_CONTENT, B.CREATE_DATE, IMPORTANCE_LEVEL, DEPT_NAME
	FROM BOARD B
	JOIN RECOMMEND R ON(BOARD_NO = REF_BNO)
	JOIN MEMBER M ON(B.BOARD_WRITER = M.USER_NO)
    JOIN DEPARTMENT D USING(DEPT_CODE)
	WHERE REF_UNO = #{userNo}
	AND B.STATUS = 'Y'
	AND B.CATEGORY_CODE = 'B1'
  </select>
  
  <update id="updateBoard">
  	UPDATE BOARD
  	SET BOARD_TITLE = #{boardTitle},
  		BOARD_CONTENT = #{boardContent},
  		MODIFY_DATE = SYSDATE
  	WHERE BOARD_NO = #{boardNo}
  	AND CATEGORY_CODE = 'B1'
  	AND STATUS = 'Y'
  </update>
  
  <update id="updateBoardAttachment">
  	UPDATE BOARD_ATTACHMENT
  	SET ORIGIN_NAME = #{originName},
  		CHANGE_NAME = #{changeName},
  		FILE_PATH = #{filePath},
  		CATEGORY_CODE = 'B1'
 	WHERE REF_BNO = #{refBno}
 	AND STATUS = 'Y'
  </update>
  
  </mapper>
